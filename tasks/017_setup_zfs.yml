
## zfs key creation
## dd if=/dev/urandom of=zfs_key bs=32 count=1


  - name: Set ZFS parameters
    set_fact:
      zfs_pool_state:     present
      zfs_O_options: ## encryption options
      - "encryption=on"
      - "keyformat=raw"
      - "keylocation=file://{{zfs.key_location}}"
      zfs_pool_options:
      - "ashift=12"
      - "feature@encryption=enabled"



  - name: Ensure the zfs key is in place "{{zfs.key_location}}"
    become: true
    template:
      src: "{{local_zfs_key_location}}"
      dest: "{{zfs.key_location}}"
      backup: true
      mode: 0600

  - name: check whether the ZFS pool {{ zfs.pool_name }} exists
    become: true
    command: zpool list -Ho name {{ zfs.pool_name }}
    register: result_pool_list
    ignore_errors: true
    changed_when: false

  - name: Create tank zpool       zpool create
      {{'-O' if zfs_O_options else ''  }} {{ zfs_O_options | join(' -O ') }}
      {{ '-o' if zfs_pool_options else ''  }} {{ zfs_pool_options | join(' -o ') }}
      {{ '-m ' + zfs_pool_mountpoint if zfs.pool_mountpoint else '' }}
      {{ zfs.pool_name }}
      {{ zfs.pool_devices | join(' ') }}
    become: true
    command: >-
      zpool create
      {{'-O' if zfs_O_options else ''  }} {{ zfs_O_options | join(' -O ') }}
      {{ '-o' if zfs_pool_options else ''  }} {{ zfs_pool_options | join(' -o ') }}
      {{ '-m ' + zfs_pool_mountpoint if zfs.pool_mountpoint else '' }}
      {{ zfs.pool_name }}
      {{ zfs.pool_devices | join(' ') }}
    when:
      - zfs_pool_state | default('present') == 'present'
      - result_pool_list.rc == 1
      - setup_zfs | bool

  - name: Create a new data set "backup"
    become: true
    community.general.zfs:
      name: "{{zfs.pool_name}}/backup"
      state: present
      extra_zfs_properties:
        setuid: off
    when:
      - setup_zfs | bool

  - name: Create a new data set "samba"
    become: true
    community.general.zfs:
      name: "{{zfs.pool_name}}/samba"
      state: present
      extra_zfs_properties:
        setuid: off
    when:
      - setup_zfs | bool

  - name: Create a new file system /home/{{usernames.nextcloud}}
    become: true
    community.general.zfs:
      name: "{{zfs.pool_name}}/nextcloud"
      state: present
      extra_zfs_properties:
        setuid: off
        mountpoint: /home/{{usernames.nextcloud}}
    when: 
    - create_zfs | bool
    - setup_zfs | bool
    - app_nextcloud.using    | bool


  - name: Add the user nextcloud
    become: true  
    ansible.builtin.user:
      name: "{{usernames.nextcloud}}"
      comment: nextcloud docker user
      uid: 1041
      group: docker
    when:
      - create_zfs | bool
      - setup_zfs | bool
      - app_nextcloud.using  | bool  

  - name: Set zfs permissions
    become: true  
    ansible.builtin.file:
      state: directory
      path: "/home/{{usernames.nextcloud}}"
      owner: nextcloud
      group: docker
      mode: '0750'
    when:
      - create_zfs | bool
      - setup_zfs | bool
      - app_nextcloud.using     | bool



  - name: Service to auto load zfs key
    become: true
    template:
      src: ../templates/zfs_load_key_service.j2
      dest: /etc/systemd/system/zfs-load-key.service
      backup: true
      mode: 0600

  - name: Start zfs service
    become: true
    ansible.builtin.service:
      name: "zfs-load-key"
      enabled: yes
      state: started