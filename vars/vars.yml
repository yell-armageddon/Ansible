# control node describes the local machine where ansible is run.
control_node_user: myLinuxUser
control_node:
  # where to sent warning/log emails to
  email: a@b.c
  repo_backup_path: '/home/{{ control_node_user }}/AnsibleBackup'
  zfs_key_location: '/home/{{ control_node_user }}/AnsibleSecrets/zfs_key'
  luks_key_location: '/home/{{ control_node_user }}/AnsibleSecrets/luks_key'

hdd_logs: /root
script_location: /usr/local/sbin

# DNS entries
dns:
  host: goip.it
  user: IfjdsaKTET
  password: dfERFXCC93reX


#host:
#  nextcloud: nextcloud.{{dns.host}}
#  bookstack: bookstack.{{dns.host}}

# ZFS configuration
## ZFS is set up as two mirrored devices
## specify the devices to be used.
zfs:
   pool_name: data
   pool_mountpoint: /media
   key_location: /etc/zfs_data_key
   pool_devices:
    - /dev/disk/by-id/a
    - /dev/disk/by-id/b

#LUKS setup
## this device is used as a additional backup
luks:
  # /dev/disk/by-id/{{device_id}} specifies the device to be used
  device_id: scsi-3500014a000000001
  key_location: /etc/luks_key_2
  mountpoint: /backup
  mapper_name: dm_crypt-2

# Backups
## backups are relying on daily borgmatic runs to the ZFS and LUKS devices.
borgmatic:
  using: true
  repo_one: /media/backup/repo
  repo_two: /backup/repo
  passhprase: secret1
  password_file: /etc/borgmatic/pw
  group: mybackup
  user: mybackupuser
## specify additional paths to add to the repo. list cannot be empty.
  additional_backup_dirs:
    - /root

# Email credentials
## these are used to sent important warnings
## create a new, seperate email for this.
email:
  address: aaa@outlook.com
  password: asdasd
  server: smtp.office365.com
  port: 587

# Docker container
## list of variables relevant for each docker container
## if app_<docker>.using is false, the container will not be used.

## usernames running the individual docker container.
usernames:
  nginx: nginx
  nextcloud: nextcloud
  bookstack: bookstack
  syncthing: syncthing
  pihole: pihole

app_nginx:
  user: nginx
  docker_compose_target: "/home/{{usernames.nginx}}/docker-compose.yml"
  letsencrypt_email: a@b.c

app_nextcloud:
  using: true
  host: nextcloud.{{dns.host}}
  docker_compose_target:  /home/{{usernames.nextcloud}}/docker-compose.yml
  database: "{{usernames.nextcloud}}"
  database_user: "{{usernames.nextcloud}}"
  database_password: "SR£tfeadscRT!"
  database_root_password: "WFAASR£tfeadsc?)as3"
  backupdir: "/home/{{usernames.nextcloud}}/app"


app_bookstack:
  using: true
  host: bookstack.{{dns.host}}
  docker_compose_target:  /home/{{usernames.bookstack}}/docker-compose.yml
  database: "{{usernames.bookstack}}app"
  database_host: "{{usernames.bookstack}}_db"
  database_user: "{{usernames.bookstack}}"
  database_password: "SR£tfeadscRT!"
  database_root_password: "WFAASR£tfeadsc?)as3"
  backupdir: /home/{{usernames.bookstack}}/config/www
  backupdb: /home/{{usernames.bookstack}}/backup

app_syncthing:
  using: true
  host: syncthing.{{dns.host}}
  docker_compose_target:  /home/{{usernames.syncthing}}/docker-compose.yml

app_pihole:
  using: true
  host: pihole.{{dns.host}}
  docker_compose_target:  /home/{{usernames.pihole}}/docker-compose.yml
  password: "secret12re"
  dns_server_1: 8.8.8.8 # dns server need to be set manually
  dns_server_2: 8.8.4.4
  # also need to add blocklist manually 
  # https://github.com/RPiList/specials/blob/54876178ffa7e4d1224ac81b00bedd0040f65802/Blocklisten.md
